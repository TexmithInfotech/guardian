{"version":3,"sources":["./src/app/get-api.service.ts","./src/environments/environment.ts","./src/app/textfield/textfield.component.ts","./src/app/textfield/textfield.component.html","./src/app/scoreboard/scoreboard.component.ts","./src/app/scoreboard/scoreboard.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/paragraph/paragraph.component.html","./src/app/paragraph/paragraph.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from  '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetApiService {\r\n\r\n  constructor(\r\n     public http:HttpClient\r\n  ) { }\r\n\r\n\r\n  apiCall(id)\r\n  {\r\n    //alert(id);\r\n    //return this.http.get('https://guardianeb.com/api/typing-practice/22');\r\n    return this.http.get('https://guardianeb.com/api/typing-practice/'+id);\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-textfield',\r\n  templateUrl: './textfield.component.html',\r\n  styleUrls: ['./textfield.component.css']\r\n})\r\nexport class TextfieldComponent implements OnInit {\r\n\r\n  private _disabled = true;\r\n  @Input() set disabled(val) {\r\n    this._disabled = val;\r\n    if (!val) {\r\n      this.inputRef.nativeElement.value = '';\r\n      const timeout = setTimeout(() => {\r\n        this.inputRef.nativeElement.focus();\r\n        clearTimeout(timeout);\r\n      }, 100);\r\n    }\r\n  }\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  @Output() typing = new EventEmitter();\r\n\r\n  @ViewChild('input') inputRef: ElementRef;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onKeyup(e) {\r\n    this.typing.emit({\r\n      value: e.target.value,\r\n      key: e.key\r\n    });\r\n  }\r\n\r\n  onKeydownSpace(e) {\r\n    if (!e.target.value || e.target.value.endsWith(' ')) {\r\n      // Not allowing more than one space\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n  }\r\n\r\n  restrictKeys(e) {\r\n    // Not allowing enter key\r\n    e.preventDefault();\r\n    return;\r\n  }\r\n}\r\n","<textarea placeholder=\"Start typing here...\" [disabled]=\"disabled\" #input class=\"no-selection\" (keydown.Enter)=\"restrictKeys($event)\"\r\n  (keydown.ArrowLeft)=\"restrictKeys($event)\"\r\n  (keydown.Space)=\"onKeydownSpace($event)\" (keyup)=\"onKeyup($event)\" (paste)=\"$event.preventDefault()\"></textarea>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { timer } from 'rxjs';\r\nimport { DEFAULT_TIME } from '../app.constant';\r\nimport { AppComponent } from '../app.component';\r\nimport {ActivatedRoute,ActivatedRouteSnapshot,Params} from '@angular/router';\r\nimport {GetApiService } from '../get-api.service'; \r\nimport { HttpClient } from  '@angular/common/http';\r\n@Component({\r\n  selector: 'app-scoreboard',\r\n  templateUrl: './scoreboard.component.html',\r\n  styleUrls: ['./scoreboard.component.css']\r\n})\r\nexport class ScoreboardComponent implements OnInit {\r\n  paragraphs = [{text:''}];\r\n  totalword;\r\n  dataarray = Array();\r\n  myvar:any;\r\n  title:any;\r\n  public id: string;\r\n  time:number;\r\n  public time_limit:number;\r\n\r\n  public defaultTime:number;\r\n  constructor( public api:GetApiService,public route: ActivatedRoute){\r\n      //super(('https://guardianeb.com/api/typing-practice/22'),'hello'); // Call the parent class's constructor\r\n      console.log('from cononentst');\r\n      this.route.queryParams.subscribe((params: Params) => {\r\n          this.api.apiCall(params.test_id).subscribe((data)=>{\r\n            \r\n            this.myvar = data;\r\n            this.myprocess();\r\n            this.dataarray.push(\"arrayvalue\");\r\n            })\r\n        });\r\n        \r\n        this.paragraphs = this.dataarray;\r\n  \r\n  }\r\n  myprocess(){\r\n      this.paragraphs = [{text:this.myvar['data']['paragraph']}];\r\n      this.time_limit = this.myvar['data']['time_limit'];\r\n\r\n      this.totalword = this.myvar['data']['paragraph'].match(/\\w+/g).length;\r\n      this.time = this.time_limit*60;\r\n      console.log('timing',this.time*60);\r\n    \r\n      //console.log('data',this.myvar['data']['paragraph']);\r\n      //this.resetTest();\r\n  this.defaultTime = this.time;\r\n    \r\n    }\r\n    \r\n\r\n  private _start = false;\r\n  @Input() set start(val) {\r\n    this._start = val;\r\n    if (val) {\r\n      this.time = this.defaultTime;\r\n      this.lastBest = this.records.best;\r\n      this.startTimer();\r\n    } else if (this.timer) {\r\n      this.timesUp.emit(this.time);\r\n      this.timer.unsubscribe();\r\n    }\r\n  }\r\n  get start() {\r\n    return this._start;\r\n  }\r\n\r\n  @Input() score;\r\n\r\n  timer;\r\n\r\n  @Output() timesUp = new EventEmitter();\r\n\r\n  @Input() records = {\r\n    best: 0,\r\n    last: 0\r\n  };\r\n  lastBest = this.records.best;\r\n\r\n    // constructor() { }\r\n\r\n     ngOnInit(): void {\r\n       this.lastBest = this.records.best;\r\n     }\r\n\r\n  startTimer() {\r\n    this.timer = timer(1000, 1000).subscribe(res => {\r\n      if (res === this.defaultTime) {\r\n        this.time = 0;\r\n        this.timesUp.emit(0);\r\n        this.timer.unsubscribe();\r\n        this.timer = null;\r\n      } else {\r\n        this.time--;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h2 *ngIf=\"time\" class=\"timer\">Time left: {{ time }} seconds</h2>\r\n<h2 *ngIf=\"!time\" class=\"timer\">Time's up</h2>\r\n\r\n<section class=\"main-section\">\r\n  <div class=\"scores-section\">\r\n    <div class=\"wpm\">Words per minute: {{score.wpm}}</div>\r\n    <div class=\"errors\">Wrong Words {{score.errors}}</div>\r\n    <div class=\"score\">Total Words: {{score.total}}</div>\r\n  </div>\r\n  <div class=\"records\">\r\n    <div class=\"accuracy\">Accuracy: {{score.accuracy}}%</div>\r\n    <div class=\"best\">\r\n      Correct Words : {{score.correct}}\r\n      <span class=\"new-best\" *ngIf=\"this.lastBest < records.best\">&nbsp;(New)</span>\r\n    </div>\r\n    <div class=\"last\">Inaccuracy: {{score.inaccuracy}}%</div>\r\n  </div>\r\n</section>\r\n","<main>\r\n  <app-scoreboard [start]=\"startTyping\" [score]=\"score\" [records]=\"records\" (timesUp)=\"timesUp($event)\"></app-scoreboard>\r\n  <app-paragraph [typedWords]=\"previousWords\" [nextWord]=\"nextWord\" [upcomingSentence]=\"upcomingSentence\"></app-paragraph>\r\n  <app-textfield [disabled]=\"!startTyping\" (typing)=\"newWordEntered($event)\"></app-textfield>\r\n\r\n  <div class=\"actions\">\r\n    <button *ngIf=\"!startTyping\" (click)=\"startTimer()\">Start</button>\r\n    <button *ngIf=\"startTyping\" (click)=\"stopTimer()\">Stop</button>\r\n  </div>\r\n</main>\r\n","import { Component } from '@angular/core';\r\n//import { DEFAULT_TIME } from './app.constant';\r\nimport {GetApiService } from './get-api.service'; \r\nimport {Observable, observable} from 'rxjs';\r\nimport {ActivatedRoute,ActivatedRouteSnapshot,Params} from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  paragraphs = [{text:''}];\r\n  totalword;\r\n  dataarray = Array();\r\n  myvar:any;\r\n  title:any;\r\n  public id: string;\r\n  public defaultTime:any;\r\n  public time_limit:string;\r\n  //userData$:Observable<any>;\r\n  constructor( public api:GetApiService,public route: ActivatedRoute)\r\n  {\r\n    this.route.queryParams.subscribe((params: Params) => {\r\n      this.api.apiCall(params.test_id).subscribe((data)=>{\r\n        \r\n        this.myvar = data;\r\n        this.myprocess();\r\n        this.dataarray.push(\"arrayvalue\");\r\n        })\r\n    });\r\n    \r\n    this.paragraphs = this.dataarray;\r\n  }\r\nmyprocess(){\r\n\r\n  this.paragraphs = [{text:this.myvar['data']['paragraph']}];\r\n  this.time_limit = this.myvar['data']['time_limit'];\r\n  this.totalword = this.myvar['data']['paragraph'].match(/\\w+/g).length;\r\n  //console.log('total length',this.totalword);\r\n\r\n  //console.log('time_taken',this.myvar['data']['time_limit']);\r\n\r\n  //console.log('data',this.myvar['data']['paragraph']);\r\n  this.resetTest();\r\n this.defaultTime = this.time_limit;\r\n this.defaultTime = this.defaultTime*60;\r\n}\r\n\r\n \r\n\r\n //title=\"normal value\";\r\n //console.warn(title);\r\n // this.paragraphs.push(text:\"this is third nbcjkssjkjb sjcbsjckscns cjksc skc sjkcb sjkcbs cksbc sk\");\r\n  upcomingSentence = '';\r\n  nextWord = '';\r\n  previousWords = [];\r\n  allWords = [];\r\n  selectedParagraph = '';\r\n  startTyping = false;\r\n  score = {\r\n    wpm: 0,\r\n    errors: 0,\r\n    total: 0,\r\n    accuracy: 0,\r\n    inaccuracy: 0,\r\n    incorrect:0,\r\n    correct:0\r\n  };\r\n  records = {\r\n    best: parseInt(localStorage.getItem('best') || '0', 10),\r\n    last: parseInt(localStorage.getItem('last') || '0', 10)\r\n  };\r\n\r\n\r\n  ngOnInit(): void{\r\n\r\n  \r\n    //sleep(300);\r\n\r\n\r\n  }\r\n\r\n  //console.log(this.paragraphs);\r\n\r\n  newWordEntered(e) {\r\n    if (this.startTyping) {\r\n      const typedWords = e.value.split(' ');\r\n      const score = {\r\n        wpm: 0,\r\n        errors: 0,\r\n        total: this.totalword,\r\n        accuracy: 0,\r\n        inaccuracy: 0,\r\n        incorrect:0,\r\n        correct:0\r\n      };\r\n      this.previousWords = [];\r\n\r\n      for (let i = 0; i < typedWords.length - 1; i++) {\r\n        const typedWord = typedWords[i];\r\n        const originalWord = this.allWords[i];\r\n        const wordInfo = {\r\n          hasError: false,\r\n          word: originalWord\r\n        };\r\n\r\n        if (typedWord === originalWord) {\r\n         // score.total += 10;\r\n        } else {\r\n          //score.total -= 5;\r\n          wordInfo.hasError = true;\r\n          score.errors++;\r\n        }\r\n\r\n        this.previousWords.push(wordInfo);\r\n      }\r\n\r\n      this.nextWord = this.allWords[typedWords.length - 1];\r\n      this.upcomingSentence = this.allWords.slice(typedWords.length).join(' ');\r\n\r\n      this.score = score;\r\n    }\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.previousWords.length) {\r\n      //this.resetTest();\r\n      this.records.last = parseInt(localStorage.getItem('last') || '0', 10);\r\n    }\r\n    if (!this.startTyping) {\r\n      this.score = { // Resetting scores\r\n        wpm: 0,\r\n        errors: 0,\r\n        total: this.totalword,\r\n        accuracy: 0,\r\n        inaccuracy: 0,\r\n        incorrect:0,\r\n        correct:0\r\n      };\r\n      this.startTyping = true;\r\n    }\r\n  }\r\n\r\n  stopTimer() {\r\n    if (this.startTyping) {\r\n      this.startTyping = false;\r\n    }\r\n  }\r\n\r\n  resetTest() {\r\n    this.previousWords = [];\r\n    this.selectedParagraph = this.paragraphs[Math.floor(Math.random() * this.paragraphs.length)].text;\r\n    const firstSpaceIndex = this.selectedParagraph.indexOf(' ');\r\n\r\n    this.upcomingSentence = this.selectedParagraph.substr(firstSpaceIndex + 1);\r\n    this.nextWord = this.selectedParagraph.substr(0, firstSpaceIndex);\r\n\r\n    this.allWords = this.selectedParagraph.split(' ');\r\n    this.score.total =  this.totalword;\r\n    console.log('total score',this.score.total);\r\n  }\r\n\r\n  timesUp(timeInSeconds) {\r\n    this.startTyping = false;\r\n    this.score.wpm = Math.floor(this.previousWords.length / ((this.defaultTime - timeInSeconds) / 60));\r\n    //this.score.wpm = this.score.wpm\r\n    console.log('wpm',timeInSeconds);\r\n    console.log('defaulttime',this.defaultTime);\r\n    this.score.accuracy = this.previousWords.length ? parseFloat((((this.previousWords.length - this.score.errors) / this.previousWords.length) * 100).toFixed(2)) : 0;\r\n    this.score.incorrect = this.previousWords.length;\r\n    this.score.correct = this.previousWords.length-this.score.errors;\r\n    //console.log('incorrect',this.score.correct);\r\n   // this.score.inaccuracy = 100-this.score.accuracy;\r\n   this.score.total =  this.totalword;\r\n\r\n    this.score.inaccuracy = this.previousWords.length ? parseFloat((100-((this.previousWords.length - this.score.errors) / this.previousWords.length) * 100).toFixed(2)) : 0;\r\n    //console.log(typeof this.score.accuracy);\r\n    //localStorage.setItem('best', '24');\r\n\r\n   // if (this.score.total > this.records.best) {\r\n      //localStorage.setItem('best', this.score.correct.toString());\r\n      //this.records.best = 92;\r\n      //this.records.best = this.score.total;\r\n    //}\r\n\r\n    //localStorage.setItem('last', this.score.total.toString());\r\n    //this.resetTest();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\r\nimport { ParagraphComponent } from './paragraph/paragraph.component';\r\nimport { TextfieldComponent } from './textfield/textfield.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ActivatedRoute,RouterModule,Routes  }  from '@angular/router';\r\n//import { RouterTestingModule } from '@angular/router/testing';\r\nconst routes: Routes = [\r\n\r\n  {    \r\n    path: ':test_id',\r\n    component: AppComponent,\r\n  }\r\n\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,  \r\n    ScoreboardComponent,\r\n    ParagraphComponent,\r\n    //RouterModule,\r\n    TextfieldComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [HttpClientModule,RouterModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\nexport class AppRoutingModule { }","<p class=\"para_class\">\r\n\r\n  <span *ngFor=\"let word of typedWords\" class=\"previous\"  [class.error]=\"word.hasError\">{{ word.word ? word.word + ' ' : '' }}</span>\r\n  <span class=\"next\" id=\"targetElement\">{{ nextWord ? nextWord + ' ' : '' }}</span>\r\n  <span class=\"upcoming\">{{ upcomingSentence }}</span>\r\n</p>\r\n","import { Component, Input, OnInit,ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-paragraph',\r\n  templateUrl: './paragraph.component.html',\r\n  styleUrls: ['./paragraph.component.css']\r\n})\r\nexport class ParagraphComponent implements OnInit {\r\n\r\n  @Input() typedWords = [];\r\n\r\n  @Input() nextWord = '';\r\n\r\n  @Input() upcomingSentence = '';\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) { \r\n   // this.scrollToElement();\r\n\r\n  }\r\n      // scrollToElement() {\r\n      //   console.log('from scroll into');\r\n      //   const element = this.elementRef.nativeElement.targetElement');\r\n      //   console.log('from scroll into',element);\r\n\r\n      //   //element.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n      // }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}